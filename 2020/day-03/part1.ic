--     ::= import "core.ic"
cstdio ::= import "cstdio.ic"
io     ::= import "io.ic"
file   ::= import "file.ic"

width  ::= 31
height ::= 323

map: [height, width + 1; u8]
file.File ("input.txt") open [f: *cstdio.File] {
  load_map(f, &map) 
}

i := 0
tree_count := 0
while (i < height) do {
  if (map[i][3 * i % width] == "#"[0]) then {
    tree_count += 1
  }
  i += 1
}

io.Print(tree_count)

load_map ::= (f: *cstdio.File, m: *[height, width + 1; u8]) -> () {
  for (0, height) do [i: i64] {
    cstdio.fgets(&(@m)[i][0], (width + 1) as i32, f)
    cstdio.fgetc(f) // Ignore remaining newline.
  }
}
