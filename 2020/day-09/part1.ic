--     ::= import "core.ic"
cstdio ::= import "cstdio.ic"
io     ::= import "io.ic"
file   ::= import "file.ic"

NUM_LINES ::= 1000
nums: [NUM_LINES; i64]

file.File ("input.txt") open [f: *cstdio.File] {
  fscanf ::= foreign("fscanf", (*cstdio.File, [*]char, *i64) -> i32)
  index := 0
  while (fscanf(f, "%lld".data, &nums[index]) != cstdio.eof) do { index += 1 }
}

validate ::= (ptr: [*]i64, len: i64) -> i64 {
  last := ptr[len - 1]
  for (0, len - 2) do [i: i64] {
    for (i, len - 1) do [j: i64] {
      if (ptr[i] + ptr[j] == last) then { return -1 }
    }
  }
  return last
}

for (0, NUM_LINES - 25) do [i: i64] {
  num := validate(&nums[i], 26)
  if (num != -1) then {
    io.Print(num)
    io.Print("\n")
  }
}
