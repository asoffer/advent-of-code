--     ::= import "core.ic"
cstdio ::= import "cstdio.ic"
io     ::= import "io.ic"
file   ::= import "file.ic"

sort ::= (data: [*]i64, len: i64) -> () {
  for (0, len - 1) do [i: i64] {
    for (i + 1, len) do [j: i64] {
      if (data[i] > data[j]) then {
        temp := data[i]
        data[i] = data[j]
        data[j] = temp
      }
    }
  }
}

NUM_LINES ::= 114
nums: [NUM_LINES; i64]

file.File ("input.txt") open [f: *cstdio.File] {
  fscanf ::= foreign("fscanf", (*cstdio.File, [*]u8, *i64) -> i32)
  index := 1
  while (fscanf(f, &"%lld"[0], &nums[index]) != cstdio.eof) do { index += 1 }
}

sort(&nums[0], NUM_LINES)

ones := 0
threes := 1
for (1, NUM_LINES) do [i: i64] {
  diff := nums[i] - nums[i - 1]
  if (diff == 1) then {
    ones += 1
  } else if (diff == 3) then {
    threes += 1
  }
}

io.Print(ones * threes)
